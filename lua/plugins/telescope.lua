return {
    -- {
    --     "nvim-telescope/telescope.nvim",
    --     enabled = false,
    --     dependencies = {
    --         "nvim-lua/plenary.nvim",
    --         {
    --             'nvim-telescope/telescope-fzf-native.nvim',
    --             dependencies = "nvim-telescope/telescope.nvim",
    --             build = 'make',
    --             config = function() require("telescope").load_extension('fzf') end
    --         },
    --     },
    --     cmd = { "Telescope" },
    --     keys = {
    --         {
    --             "<leader>flp",
    --             function() require("telescope.builtin").find_files({ cwd = require("lazy.core.config").options.root }) end,
    --             desc = "Find plugin files"
    --         },
    --
    --         { "<leader>ff",  ":Telescope find_files<CR>",                desc = "Telescope: Find by file name" },
    --         { "<leader>fg",  ":Telescope live_grep<CR>",                 desc = "Telescope: Find by text" },
    --         { "<leader>fb",  ":Telescope buffers<CR>",                   desc = "Telescope: Buffers list" },
    --         { "<leader>fh",  ":Telescope help_tags<CR>",                 desc = "Telescope: Help tags (docs)" },
    --         { "<leader>/",   ":Telescope current_buffer_fuzzy_find<CR>", desc = "Telescope: Help tags (docs)" },
    --
    --         { "<leader>fvo", ":Telescope vim_options<CR>",               desc = "Telescope: Vim options" },
    --         { "<leader>fvr", ":Telescope reloader<CR>",                  desc = "Telescope: Vim module reloader" },
    --         { "<leader>fvk", ":Telescope keymaps<CR>",                   desc = "Telescope: Vim keymaps" },
    --     },
    --     config = function()
    --         local actions = require("telescope.actions")
    --         local trouble = require("trouble.sources.telescope")
    --         require("telescope").setup {
    --             defaults = {
    --                 winblend = 10,
    --                 mappings = {
    --                     i = {
    --                         ["<C-q>"] = actions.smart_send_to_qflist + actions.open_qflist,
    --                         ["<C-Q>"] = actions.smart_add_to_qflist + actions.open_qflist,
    --                     },
    --                     n = {
    --                         ["<C-q>"] = actions.smart_send_to_qflist + actions.open_qflist,
    --                         ["<A-Q>"] = actions.smart_add_to_qflist + actions.open_qflist,
    --                         ["<C-n>"] = actions.cycle_history_next,
    --                         ["<C-p>"] = actions.cycle_history_prev,
    --                         ["<C-x>"] = actions.delete_buffer
    --                     },
    --                 },
    --             },
    --             pickers = { colorscheme = { enable_preview = true } }
    --         }
    --     end,
    -- }
}
